// Code generated by MockGen. DO NOT EDIT.
// Source: cache.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/vmware/load-balancer-and-ingress-services-for-kubernetes/ako-crd-operator/internal/types"
)

// MockCacheOperation is a mock of CacheOperation interface.
type MockCacheOperation struct {
	ctrl     *gomock.Controller
	recorder *MockCacheOperationMockRecorder
}

// MockCacheOperationMockRecorder is the mock recorder for MockCacheOperation.
type MockCacheOperationMockRecorder struct {
	mock *MockCacheOperation
}

// NewMockCacheOperation creates a new mock instance.
func NewMockCacheOperation(ctrl *gomock.Controller) *MockCacheOperation {
	mock := &MockCacheOperation{ctrl: ctrl}
	mock.recorder = &MockCacheOperationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheOperation) EXPECT() *MockCacheOperationMockRecorder {
	return m.recorder
}

// GetObjectByUUID mocks base method.
func (m *MockCacheOperation) GetObjectByUUID(arg0 context.Context, arg1 string) (types.DataMap, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectByUUID", arg0, arg1)
	ret0, _ := ret[0].(types.DataMap)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetObjectByUUID indicates an expected call of GetObjectByUUID.
func (mr *MockCacheOperationMockRecorder) GetObjectByUUID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectByUUID", reflect.TypeOf((*MockCacheOperation)(nil).GetObjectByUUID), arg0, arg1)
}

// PopulateCache mocks base method.
func (m *MockCacheOperation) PopulateCache(arg0 context.Context, arg1 ...string) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PopulateCache", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// PopulateCache indicates an expected call of PopulateCache.
func (mr *MockCacheOperationMockRecorder) PopulateCache(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PopulateCache", reflect.TypeOf((*MockCacheOperation)(nil).PopulateCache), varargs...)
}
