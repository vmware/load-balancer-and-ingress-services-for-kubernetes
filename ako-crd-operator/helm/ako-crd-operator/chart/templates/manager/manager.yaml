apiVersion: apps/v1
kind: Deployment
metadata:
  name: ako-crd-operator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    control-plane: controller-manager
spec:
  replicas:  {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        control-plane: controller-manager
        {{- if and .Values.controllerManager.pod .Values.controllerManager.pod.labels }}
        {{- range $key, $value := .Values.controllerManager.pod.labels }}
        {{ $key }}: {{ $value }}
        {{- end }}
        {{- end }}
    spec:
      containers:
        - name: ako-crd-operator
          args:
            {{- range .Values.controllerManager.container.args }}
            - {{ . }}
            {{- end }}
          command:
            - /manager
          image: {{ .Values.controllerManager.container.image.repository }}:{{ .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.controllerManager.container.image.imagePullPolicy }}
          {{ if .Values.controllerManager.persistentVolumeClaim }}
          volumeMounts:
            - mountPath: {{ .Values.controllerManager.container.mountPath }}
              name: ako-crd-operator-pv-storage
          {{ end }}
          env:
            - name: CTRL_IPADDRESS
              valueFrom:
                configMapKeyRef:
                  name: avi-k8s-config
                  key: controllerIP
            - name: CTRL_VERSION
              valueFrom:
                configMapKeyRef:
                  name: avi-k8s-config
                  key: controllerVersion
            - name: CLOUD_NAME
              valueFrom:
                configMapKeyRef:
                  name: avi-k8s-config
                  key: cloudName
            - name: TENANT_NAME
              valueFrom:
                configMapKeyRef:
                  name: avi-k8s-config
                  key: tenantName
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: avi-k8s-config
                  key: clusterName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: avi-k8s-config
                  key: logLevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{ if .Values.controllerManager.persistentVolumeClaim }}
            - name: USE_PVC
              value: "true"
            {{ end }}
            - name: LOG_FILE_PATH
              value: {{ .Values.controllerManager.container.mountPath }}
            - name: LOG_FILE_NAME
              value: {{ .Values.controllerManager.container.logFile }}
          livenessProbe:
            {{ toYaml .Values.controllerManager.container.livenessProbe | nindent 12 }}
          readinessProbe:
            {{ toYaml .Values.controllerManager.container.readinessProbe | nindent 12 }}
          resources:
            {{ toYaml .Values.controllerManager.container.resources | nindent 12 }}
          securityContext:
            {{ toYaml .Values.controllerManager.container.securityContext | nindent 12 }}
      securityContext:
        {{ toYaml .Values.controllerManager.securityContext | nindent 8 }}
      serviceAccountName: {{ .Values.controllerManager.serviceAccountName }}
      terminationGracePeriodSeconds: {{ .Values.controllerManager.terminationGracePeriodSeconds }}
      imagePullSecrets:
        {{ toYaml .Values.controllerManager.container.image.pullSecrets | nindent 8 }}
      {{ if .Values.controllerManager.persistentVolumeClaim }}
      volumes:
        - name: ako-crd-operator-pv-storage
          persistentVolumeClaim:
            claimName: {{ .Values.controllerManager.persistentVolumeClaim }}
      {{ end }}