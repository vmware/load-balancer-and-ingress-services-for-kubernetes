apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ako
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ako.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: ako
  selector:
    matchLabels:
      {{- include "ako.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ako.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: ako-sa
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{ if .Values.persistentVolumeClaim }}
      volumes:
      - name: ako-pv-storage
        persistentVolumeClaim:
          claimName: {{ .Values.persistentVolumeClaim }}
      {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          {{ if .Values.persistentVolumeClaim }}
          volumeMounts:
          - mountPath: {{ .Values.mountPath }}
            name: ako-pv-storage
          {{ end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","/var/pre_stop_hook.sh"]
          env:
          {{ if .Values.avicredentials.certificateAuthorityData  }}
          - name: CTRL_CA_DATA
            valueFrom:
              secretKeyRef:
                name: avi-secret
                key: certificateAuthorityData
            {{ end }}
          - name: CTRL_IPADDRESS
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: controllerIP
          - name: CTRL_VERSION
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: controllerVersion
          - name: CNI_PLUGIN
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: cniPlugin
          - name: SHARD_VS_SIZE
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: shardVSSize
          - name: PASSTHROUGH_SHARD_SIZE
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: passthroughShardSize
          - name: FULL_SYNC_INTERVAL
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: fullSyncFrequency
          - name: CLOUD_NAME
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: cloudName
          - name: TENANT_NAME
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: tenantName
          - name: TENANTS_PER_CLUSTER
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: tenantsPerCluster
          - name: CLUSTER_NAME
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: clusterName
          - name: ENABLE_RHI
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: enableRHI
          - name: ENABLE_EVH
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: enableEVH
          - name: SERVICES_API
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: servicesAPI
          - name: DEFAULT_DOMAIN
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: defaultDomain
          - name: DISABLE_STATIC_ROUTE_SYNC
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: disableStaticRouteSync
           {{ if .Values.AKOSettings.syncNamespace  }}
          - name: SYNC_NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: syncNamespace
          {{ end }}
           {{ if .Values.NetworkSettings.nsxtT1LR }}
          - name: NSXT_T1_LR
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: nsxtT1LR
          {{ end }}
          - name: NAMESPACE_SYNC_LABEL_KEY
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: nsSyncLabelKey
          - name: NAMESPACE_SYNC_LABEL_VALUE
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: nsSyncLabelValue
          - name: DEFAULT_ING_CONTROLLER
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: defaultIngController
          - name: SEG_NAME
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: serviceEngineGroupName
          - name: BGP_PEER_LABELS
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: bgpPeerLabels
          - name: NODE_NETWORK_LIST
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: nodeNetworkList
          - name: VIP_NETWORK_LIST
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: vipNetworkList
          - name: AKO_API_PORT
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: apiServerPort
          - name: SERVICE_TYPE
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: serviceType
          {{ if eq .Values.L7Settings.serviceType "NodePort" }}
          - name: NODE_KEY
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: nodeKey
          - name: NODE_VALUE
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: nodeValue
          {{ end }}
          - name: ADVANCED_L4
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: advancedL4
          - name: AUTO_L4_FQDN
            valueFrom:
              configMapKeyRef:
                name: avi-k8s-config
                key: autoFQDN
          {{ if .Values.persistentVolumeClaim }}
          - name: USE_PVC
            value: "true"
          {{ end }}
          - name: LOG_FILE_PATH
            value: {{ .Values.mountPath }}
          - name: LOG_FILE_NAME
            value: {{ .Values.logFile }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /api/status
              port:  {{ default "8080" .Values.AKOSettings.apiServerPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
        
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
